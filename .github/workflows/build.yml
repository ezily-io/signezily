name: Build Docker

on:
  workflow_call:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']
env:
  AWS_REGION: ap-northeast-1
  AWS_ACCOUNT: 898622234277
  ECR_REPOSITORY: "signezily"
  SERVICE: "documenso-app-dev"
  CLUSTER: "data"

permissions:
  id-token: write
  contents: write
  pull-requests: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_and_publish_platform_containers:
    name: Build container
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-tags: true

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT }}:role/Github-actions
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Docker tags
        id: tags
        env:
          GIT_SHA: ${{ github.sha }}
        run: |
          IMAGE=$AWS_ACCOUNT.dkr.ecr.ap-northeast-1.amazonaws.com/$ECR_REPOSITORY
          THIS_TAG="$IMAGE:$(git rev-parse --short $GIT_SHA)"
          TAGS="$IMAGE:latest,$THIS_TAG"

          echo "this_tag=$THIS_TAG" >> $GITHUB_OUTPUT

          if [ '${{ github.event_name }}' = 'pull_request' ]; then
            echo "tags=$THIS_TAG" >> $GITHUB_OUTPUT
          else
            echo "tags=$TAGS" >> $GITHUB_OUTPUT
          fi

      - name: Build
        env:
          BUILD_PLATFORM: 'amd64'
        run: |
          docker build \
            -f ./docker/Dockerfile \
            --progress=plain \
            -t "documenso/documenso-$BUILD_PLATFORM:latest" \
            .

      - name: Push
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

      - name: Deploy
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          aws ecs update-service \
            --cluster $CLUSTER --service $SERVICE \
            --force-new-deployment