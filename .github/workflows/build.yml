name: Docker Build Signezily

on:
  workflow_dispatch:
    inputs:
      site:
        description: "Site to build"
        required: true
        default: "documentation"
        type: choice
        options:
          - web
          - marketing
          - documentation
      environment:
        description: "Environment to run the action on"
        required: true
        default: "dev"
        type: choice
        options:
          - dev
          - qa
          - prod
      ExecutionType:
        description: "Docker 'build' 'build/push' or 'deploy'"
        type: choice
        default: "build"
        options:
          - "build"
          - "build-push"
          - "deploy"
  workflow_call:
  push:
    branches: ['main']
    paths:
      - ".github/workflows/build.yml"
      - "docker/Dockerfile.*"
      - "apps/**"
      - "packages/*"
      - "scripts/*"
      - "package.json"
      - "turbo.json"
  pull_request:
    branches: ['main']
    paths:
      - ".github/workflows/build.yml"
      - "docker/Dockerfile.*"
      - "apps/**"
      - "packages/*"
      - "scripts/*"
      - "package.json"
      - "turbo.json"
env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_ACCOUNT: ${{ secrets.AWS_ACCOUNT }}
  ECR_REPOSITORY: "signezily"
  SERVICE: "signezily-app-"
  CLUSTER: "data"

permissions:
  id-token: write
  contents: write
  pull-requests: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_and_publish_platform_containers:
    name: Build container
    runs-on: ubuntu-latest
    if: '! github.event.pull_request.draft'
    strategy:
      fail-fast: false
      matrix:
        function:
          - build_web
          # - build_marketing
          - build_documentation

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-tags: true

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_GHA_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Filter Changed Files
        uses: dorny/paths-filter@v3
        id: filter
        if: |
          github.event_name != 'workflow_dispatch' || github.ref == 'refs/heads/main'
        with:
          filters: |
            web:
              - '.github/workflows/build.yml'
              - 'docker/Dockerfile'
              - 'apps/web/**'
              - 'package.json'
            marketing:
              - '.github/workflows/build.yml'
              - 'docker/Dockerfile.marketing'
              - 'apps/marketing/**'
              - 'package.json'
            documentation:
              - '.github/workflows/build.yml'
              - 'docker/Dockerfile.documentation'
              - 'apps/documentation/**'
              - 'package.json'

      - name: Build Signezily Web Docker Image
        if: |
          (github.ref == 'refs/heads/main' && github.event_name == 'push' && matrix.function == 'build_web' ) ||
          (github.event_name == 'pull_request' && matrix.function == 'build_web' && steps.filter.outputs.web == 'true') ||
          (github.event_name == 'workflow_dispatch' && matrix.function == 'build_web' &&
          (github.event.inputs.ExecutionType == 'build' || github.event.inputs.ExecutionType == 'build-push') &&
          github.event.inputs.site == 'web')
        run: .github/workflows/build.sh ${{ matrix.function }}
        env:
          EVENT_NAME: ${{ github.event_name }}
          GIT_BRANCH: ${{ github.ref_name }}
          AWS_ACCOUNT: ${{ secrets.AWS_ACCOUNT }}

      - name: Build Signezily Marketing Docker Image
        if: |
          (github.ref == 'refs/heads/main' && github.event_name == 'push' && matrix.function == 'build_marketing' ) ||
          (github.event_name == 'pull_request' && matrix.function == 'build_marketing' && steps.filter.outputs.marketing == 'true') ||
          (github.event_name == 'workflow_dispatch' && matrix.function == 'build_marketing' &&
          (github.event.inputs.ExecutionType == 'build' || github.event.inputs.ExecutionType == 'build-push') &&
          github.event.inputs.site == 'marketing')
        run: .github/workflows/build.sh ${{ matrix.function }}
        env:
          EVENT_NAME: ${{ github.event_name }}
          GIT_BRANCH: ${{ github.ref_name }}
          AWS_ACCOUNT: ${{ secrets.AWS_ACCOUNT }}

      - name: Build Signezily Documentation Docker Image
        if: |
          (github.ref == 'refs/heads/main' && github.event_name == 'push' && matrix.function == 'build_documentation' ) ||
          (github.event_name == 'pull_request' && matrix.function == 'build_documentation' && steps.filter.outputs.documentation == 'true') ||
          (github.event_name == 'workflow_dispatch' && matrix.function == 'build_documentation' &&
          (github.event.inputs.ExecutionType == 'build' || github.event.inputs.ExecutionType == 'build-push') &&
          github.event.inputs.site == 'documentation')
        run: .github/workflows/build.sh ${{ matrix.function }}
        env:
          EVENT_NAME: ${{ github.event_name }}
          GIT_BRANCH: ${{ github.ref_name }}
          AWS_ACCOUNT: ${{ secrets.AWS_ACCOUNT }}

      - name: Deploy
        if: github.ref == 'refs/heads/main' && github.event_name == 'push' || 
          github.event.inputs.ExecutionType == 'deploy'
        run: |
          aws ecs update-service \
            --cluster $CLUSTER --service signezily-app-dev \
            --force-new-deployment
